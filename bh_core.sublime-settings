{
    //Enable bracket matching on type
    "quote_enable" : true,
    "curly_enable" : true,
    "round_enable" : true,
    "square_enable": true,
    "angle_enable" : false,
    // Higlight tags if tag is selected. angle_enable must be true for tags to work
    // if you would like to ignore non tags then set ignore_non_tags to true
    "tag_enable"   : false,

    // don't show non tag angle matches
    "ignore_non_tags" : false,

    // match brackets only when the cursor is adjacent to one
    "match_adjacent_only" : true,

    // exclude or include bracket by language type (example: C++ for C++.tmLanguage)
    // Note: this is particularly useful with Angle. Some languages do not attribute any special scope to angle brackets making it hard
    // to tell when the bracket is beign used in a valid scenario.  C++ is a perfect example.  It is better to disable completely than
    // to ignore angle.  Ignoring will not show angle matches, but will also interfere with other bracket matches.
    "angle_language_list" : ["HTML","HTML 5","XML","PHP"],
    "tag_language_list"   : ["HTML","HTML 5","XML","PHP"],
    "quote_language_list" : ["Plain text"],
    "curly_language_list" : ["Plain text"],
    "round_language_list" : ["Plain text"],
    "square_language_list": ["Plain text"],

    //filter type (whitelist|blacklist)
    "angle_language_filter" : "whitelist",
    "tag_language_filter"   : "whitelist",
    "quote_language_filter" : "blacklist",
    "curly_language_filter" : "blacklist",
    "round_language_filter" : "blacklist",
    "square_language_filter": "blacklist",
    "high_visibility_enabled_by_default": true,
    "high_visibility_style": "outline",

    // Scope? (Defined in theme files.)
    // Examples: (keyword|string|number)
    "quote_scope" : "bracket.style",
    "curly_scope" : "bracket.style",
    "round_scope" : "bracket.style",
    "square_scope": "bracket.style",
    "angle_scope" : "bracket.style",
    "tag_scope"   : "bracket.style",

    // Outline? (solid|outline|underline|none)
    "quote_style" : "none",
    "curly_style" : "outline",
    "round_style" : "outline",
    "square_style": "outline",
    "angle_style" : "outline",
    "tag_style"   : "none",

    // Path to gutter icons (relative to Packages)
    "icon_path" : "BracketHighlighter/icons",

    // Disable gutter icons when doing multi-select
    "no_multi_select_icons": false,

    // Icon? (dot|circle|bookmark|quote|curly_bracket|round_bracket|square_bracket|angle_bracket|none)
    "quote_icon" : "none",
    "curly_icon" : "none",
    "round_icon" : "none",
    "square_icon": "none",
    "angle_icon" : "none",
    "tag_icon"   : "none",

    // Higlight brackets of tag only instead of entire tag
    "tag_brackets_only" : false,

    // Type of tag selection? (html/xhtml)
    "tag_type" : "html",

    // Threshold distance to search
    "search_threshold"     : 2000,
    "tag_search_threshold" : 2000,
    "use_search_threshold"     : true,
    "tag_use_search_threshold" : true,

    // Selection threshold; max multi-selection allowed for auto-highlight
    "auto_selection_threshold" : 10,

    // When matching quoted strings, match brackets internally in the string as well.
    // Particularly useful for strings containing regex
    "match_string_brackets": false,

    // Find brackets in non-quoted scoped strings
    "find_brackets_in_any_string": true,

    // Ignore highlighting strings but highlight brackets that are found inside.
    "highlight_string_brackets_only": false,

    // Match brackets only when cursor is between the brackets
    "match_brackets_only_when_between": false,

    // Default string escape mode for string brackets (string|regex)
    // string escape: \\{
    // regex escape: \{
    "default_bracket_string_escape_mode": "regex",
    "bracket_styles": {
    // "default" and "unmatched" styles are special
    // styles. If they are not defined here,
    // they will be generated internally with
    // internal defaults.

    // "default" style defines attributes that
    // will be used for any style that does not
    // explicitly define that attribute.  So if
    // a style does not define a color, it will
    // use the color from the "default" style.
    "default": {
        "icon": "dot",
        // BH1's original default color for reference
        // "color": "entity.name.class",
        "color": "brackethighlighter.default",
        "style": "underline"
    },

    // This particular style is used to highlight
    // unmatched bracket pairs.  It is a special
    // style.
    "unmatched": {
        "icon": "question",
        "color": "brackethighlighter.unmatched",
        "style": "outline"
    },
    // User defined region styles
    "curly": {
        "icon": "curly_bracket",
        "color": "brackethighlighter.curly"
        // "style": "underline"
    },
    "round": {
        "icon": "round_bracket",
        "color": "brackethighlighter.round"
        // "style": "underline"
    },
    "square": {
        "icon": "square_bracket",
        "color": "brackethighlighter.square"
        // "style": "underline"
    },
    "angle": {
        "icon": "angle_bracket",
        "color": "brackethighlighter.angle"
        // "style": "underline"
    },
    "tag": {
        "icon": "tag",
        "color": "brackethighlighter.tag",
        // "style": "underline"
    },
    "c_define": {
        "icon": "hash",
        "color": "brackethighlighter.c_define"
        // "style": "underline"
    },
    "single_quote": {
        "icon": "single_quote",
        "color": "brackethighlighter.quote"
        // "style": "underline"
    },
    "double_quote": {
        "icon": "double_quote",
        "color": "brackethighlighter.quote"
        // "style": "underline"
    },
    "regex": {
        "icon": "star",
        "color": "brackethighlighter.quote"
        // "style": "underline"
    }
}
}
